There are some modifications I've made :
	- in some classes (like Players and its subclasses), I changed the visibility of some methods and attributes
	- in Cell.java:
		- I removed the setPlayer method beacause it was useless
		- I added the getNextCell method, which returns the cell that the currentPlayer could eat or could go on (whatever the type of currentPlayer, we have to store information about the neighbor cells). I also give a int bound argument to this method to indicate to many cell around the current one I have to deal with (here, because we just focus on the neighbor cells, bound=1)
	- in Players and its subclasses :
		- I added the color attribute
		- I added the following methods :
			* couldEat : return if the currentPlayer could eat the player give in argument
			* resetMaxLaps : called when a Players object eat something (each Players subclass could have its own maxLaps value)
			* getTypeNextCell : return 0 or 1 depending of the number of each type of cell aroud the currentPlayer one (each Players subclass has its own rules to develop or move)
			* I remove method hasEnoughNeighbor method
			* 
		- in Players subclasses : 
	- in World.java : I modified the content of the double loop of the newLap() method to make it more flexible for possible future changes
	- in Main.java : because I added the Color attribute to Players (this subclasses actually), I don't need the getColor method anymore
	
