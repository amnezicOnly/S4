- If a class B inherit from a class A which contains a private attribute x, B contains x attribute too but isn't accessible.
- If there is a method foo in both classes A and B, if we want to use A.foo() in B class, we need to call super.foo(). super keyword works only for one level up.
- If there s a method foo in both classes A and B, access modifier of B.foo() should be same or higher
- Une classe abstract possède au moins une méthode abstraite
- On peut créer un objet d'une classe qui n'a pas de constructeur
- Une classe ne peut pas extends plusieurs classes mais peut en implements plusieurs en même temps
- le constructeur de la classe parente est toujours appelé avant le constructeur de la classe enfant
- le block finally (pour les exceptions) permet d'être sûr que le code à l'intérieur sera run, erreur ou pas erreur
- Si il y a plusieurs exceptions à la suite dans un programme, seule la dernière sera conservée  
- Une classe enfant ne peut pas renvoyer une exception qui ne peut pas être renvoyé par une classe parente ???


Collections :
	- Si on copie une array qui contient des objets, on fera simplement une copie des références des objets, donc pas de nouveaux objets créés
    - (ListTest.java : 27) liste1.addAll(liste2) ajoute tous les éléments de la liste 2 dans la liste 1
    - On ne peut pas utiliser de boucle for each si on compte modifier la liste. On peut par contre utiliser :
        - une boucle for ou while avec un index int
        - utiliser un objet Iterator
    - Un objet iterator est un objet qui permet d'itérer de manière sécurisée :
        (List)Iterator<TYPE> iterator = listeName.(list)Iterator(); (dans Iterator(), on peut mettre listeName.size() mais pas de valeur explicite (même pas 0))
        forme de la boucle while (fonctionne aussi avec une boucle for)
        while(iterator.hasNext() / iterator.hasPrevious){
            TYPE elt = iterator.next()/iterator.previous();
            // fonction de la boucle
        }
    - See UsingToArray.java to see how to convert an array to a List. Note that the list returned by the Array class does not allow add, remove, etc. operations (just set()).
    - queue.peek() retourne l'élément le plus petit de queue (cf PriorityQueue)
    - 
